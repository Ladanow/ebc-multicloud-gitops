apiVersion: kubevirt.io/v1alpha3
kind: VirtualMachine
metadata:
  annotations:
    name.os.template.kubevirt.io/rhel8.8: Red Hat Enterprise Linux 7.0 or higher
  name: "{{ satellite_hostname }}"
  namespace: "{{ apps_ns }}"
  labels:
    app: "{{ satellite_hostname }}"
    flavor.template.kubevirt.io/medium: 'true'
    os.template.kubevirt.io/rhel8.8: 'true'
    workload.template.kubevirt.io/server: 'true'
spec:
  dataVolumeTemplates:
    - apiVersion: cdi.kubevirt.io/v1alpha1
      kind: DataVolume
      metadata:
        creationTimestamp: null
        name: "{{ satellite_hostname }}-rootdisk-beior"
      spec:
        pvc: #Set acccessModes to RWX and volumeMode to block for  live migration and VM pod eviction
          accessModes:
            - ReadWriteMany
          resources:
            requests:
              storage: 1000Gi
          storageClassName: ocs-storagecluster-ceph-rbd
          volumeMode: Block
        source:
          http:
            url: http://{{ provisioner_ip }}/{{ sat_qcow }}
  runStrategy: Always
  template:
    metadata:
      labels:
        flavor.template.kubevirt.io/medium: 'true'
        kubevirt.io/domain: "{{ satellite_hostname }}"
        kubevirt.io/size: large
        os.template.kubevirt.io/rhel8.8: 'true'
        vm.kubevirt.io/name: "{{ satellite_hostname }}"
        workload.template.kubevirt.io/server: 'true'
    spec:
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      domain:
        cpu:
          cores: 16
          sockets: 1
          threads: 1
        devices:
          disks:
            - disk:
                bus: virtio
              name: cloudinitdisk
            - bootOrder: 1
              disk:
                bus: virtio
              name: rootdisk
          interfaces:
            - bridge: {}
              model: virtio
              name: nic-1
          networkInterfaceMultiqueue: true
          rng: {}
        machine:
          type: pc-q35-rhel8.2.0
        resources:
          requests:
            memory: 32Gi
      evictionStrategy: LiveMigrate
      hostname: "{{ satellite_hostname }}"
      networks:
        - multus:
            networkName: "{{ apps_nad_name }}"
          name: nic-1
      terminationGracePeriodSeconds: 180
      volumes:
        - cloudInitNoCloud:
            userData: |
              #cloud-config
              ssh_pwauth: True
              user: {{ satellite_admin_username }}
              password: {{ satellite_admin_password }}
              chpasswd:
                expire: false
            networkData: |
              version: 2
              ethernets:
                eth0:
                  addresses:
                  - {{ satellite_ip }}/{{ apps_subnet_len }}
                  gateway4: {{ apps_subnet_gw }}
                  nameservers:
                    search: [{{ domain }}]
                    addresses: [{{ dns_server_ip }}]
          name: cloudinitdisk
        - dataVolume:
            name: "{{ satellite_hostname }}-rootdisk-beior"
          name: rootdisk
