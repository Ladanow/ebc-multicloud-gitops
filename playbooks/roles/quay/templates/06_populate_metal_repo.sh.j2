#
# Define release specific variables
#
export OCP_REL_MAJ={{ ocp_rel_maj }}
export OCP_REL_MIN={{ ocp_rel_min }}
export OCP_REL_MNT={{ ocp_rel_mnt }}
export OCP_RELEASE={{ ocp_release }}

export RELEASE_IMAGE=$(curl -s https://mirror.openshift.com/pub/openshift-v4/clients/ocp/${OCP_REL_MAJ}.${OCP_REL_MIN}.${OCP_REL_MNT}/release.txt | grep 'Pull From: quay.io' | awk -F ' ' '{print $3}'); echo $RELEASE_IMAGE

export UPSTREAM_REPO=${RELEASE_IMAGE}
export LOCAL_REGISTRY='{{ quay_fqdn }}'
export LOCAL_REPOSITORY='quay/ocp'
export LOCAL_SECRET_JSON={{ local_secret_json }}
#
export AI_VERSION={{ ai_version }}
#

echo "Change directory to {{ icsp_path }}"
cd {{ icsp_path }}

echo "Running oc adm release mirror\n"

oc adm release mirror \
  -a $LOCAL_SECRET_JSON \
  --from=$UPSTREAM_REPO \
  --to-release-image=$LOCAL_REGISTRY/$LOCAL_REPOSITORY:${OCP_RELEASE} \
  --to=$LOCAL_REGISTRY/$LOCAL_REPOSITORY

for image in \
  "assisted-installer-agent:$AI_VERSION" \
  "assisted-installer-controller:$AI_VERSION" \
  "assisted-installer:$AI_VERSION" \
  "assisted-service:$AI_VERSION"  \
  "ocp-metal-ui:latest" \
  "postgresql-12-centos7" \
  "s3server"
  do
    echo "Mirroring image $image\n"
    oc -a $LOCAL_SECRET_JSON image mirror quay.io/ocpmetal/$image $LOCAL_REGISTRY/quay/ocpmetal/$image
done

echo "Mirroring origin-cli \n"
oc -a $LOCAL_SECRET_JSON image mirror quay.io/openshift/origin-cli:latest $LOCAL_REGISTRY/quay/origin-cli:latest

echo "Mirroring OCP release \n"
oc -a $LOCAL_SECRET_JSON image mirror quay.io/openshift-release-dev/ocp-release:${OCP_REL_MAJ}.${OCP_REL_MIN}.${OCP_REL_MNT}-x86_64 $LOCAL_REGISTRY/$LOCAL_REPOSITORY --insecure=true

echo "Mirror CVO Digest \n"
export CVO_DIGEST=$(curl -s https://mirror.openshift.com/pub/openshift-v4/clients/ocp/${OCP_REL_MAJ}.${OCP_REL_MIN}.${OCP_REL_MNT}/release.txt | grep 'cluster-version-operator' | awk '{print $2}'); echo $CVO_DIGEST
oc -a $LOCAL_SECRET_JSON image mirror $CVO_DIGEST $LOCAL_REGISTRY/$LOCAL_REPOSITORY --insecure=true
